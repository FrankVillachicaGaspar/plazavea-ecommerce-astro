---
import { getCartResume } from "../../lib/api/cart.api";
import { priceFormatterToPE } from "../../utils/priceFormatter";

const token = Astro.locals.token;

const resume = await getCartResume(token);
---

<div class="bg-white rounded-xl shadow-lg p-6">
  <h2 class="text-2xl font-bold text-gray-800 mb-6">Información de pago</h2>

  <form id="payment-form" class="space-y-6">
    <!-- Información personal -->
    <div>
      <h3 class="text-lg font-semibold text-gray-800 mb-4">
        Información de contacto
      </h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label class="label">
            <span class="label-text">Nombre *</span>
          </label>
          <input
            type="text"
            name="nombre"
            placeholder="Juan"
            class="input input-bordered w-full"
            required
          />
        </div>
        <div>
          <label class="label">
            <span class="label-text">Apellido *</span>
          </label>
          <input
            type="text"
            name="apellido"
            placeholder="Pérez"
            class="input input-bordered w-full"
            required
          />
        </div>
      </div>
      <div class="mt-4">
        <label class="label">
          <span class="label-text">Email *</span>
        </label>
        <input
          type="email"
          name="email"
          placeholder="juan@example.com"
          class="input input-bordered w-full"
          required
        />
      </div>
    </div>

    <!-- Método de pago -->
    <div>
      <h3 class="text-lg font-semibold text-gray-800 mb-4">Método de pago</h3>
      <div class="grid grid-cols-3 gap-4 mb-4">
        <label class="cursor-pointer">
          <input
            type="radio"
            name="metodo"
            value="card"
            class="radio radio-error"
            checked
          />
          <span class="label-text ml-2">Tarjeta</span>
        </label>
        <label class="cursor-pointer">
          <input
            type="radio"
            name="metodo"
            value="paypal"
            class="radio radio-error"
          />
          <span class="label-text ml-2">PayPal</span>
        </label>
        <label class="cursor-pointer">
          <input
            type="radio"
            name="metodo"
            value="transfer"
            class="radio radio-error"
          />
          <span class="label-text ml-2">Transferencia</span>
        </label>
      </div>
    </div>

    <!-- Datos de la tarjeta -->
    <div id="card-details">
      <h3 class="text-lg font-semibold text-gray-800 mb-4">
        Datos de la tarjeta
      </h3>
      <div class="space-y-4">
        <div>
          <label class="label">
            <span class="label-text">Número de tarjeta *</span>
          </label>
          <input
            type="text"
            name="numeroTarjeta"
            placeholder="1234 5678 9012 3456"
            class="input input-bordered w-full"
            maxlength="19"
            id="card-number"
          />
        </div>
        <div class="grid grid-cols-2 gap-4">
          <div>
            <label class="label">
              <span class="label-text">Fecha de vencimiento *</span>
            </label>
            <input
              type="text"
              name="fechaVencimiento"
              placeholder="MM/YY"
              class="input input-bordered w-full"
              maxlength="5"
              id="expiry-date"
            />
          </div>
          <div>
            <label class="label">
              <span class="label-text">CVV *</span>
            </label>
            <input
              type="text"
              name="cvv"
              placeholder="123"
              class="input input-bordered w-full"
              maxlength="4"
            />
          </div>
        </div>
        <div>
          <label class="label">
            <span class="label-text">Nombre en la tarjeta *</span>
          </label>
          <input
            type="text"
            name="nombreTarjeta"
            placeholder="Juan Pérez"
            class="input input-bordered w-full"
          />
        </div>
      </div>
    </div>

    <!-- Dirección de facturación -->
    <div>
      <h3 class="text-lg font-semibold text-gray-800 mb-4">
        Dirección de facturación
      </h3>
      <div class="space-y-4">
        <div>
          <label class="label">
            <span class="label-text">Dirección *</span>
          </label>
          <input
            type="text"
            name="direccion"
            placeholder="Calle Principal 123"
            class="input input-bordered w-full"
            required
          />
        </div>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div>
            <label class="label">
              <span class="label-text">Ciudad *</span>
            </label>
            <input
              type="text"
              name="ciudad"
              placeholder="Lima"
              class="input input-bordered w-full"
              required
            />
          </div>
          <div>
            <label class="label">
              <span class="label-text">Código postal *</span>
            </label>
            <input
              type="text"
              name="codigoPostal"
              placeholder="15001"
              class="input input-bordered w-full"
              required
            />
          </div>
          <div>
            <label class="label">
              <span class="label-text">País *</span>
            </label>
            <select name="pais" class="select select-bordered w-full" required>
              <option disabled selected>Selecciona país</option>
              <option value="Perú">Perú</option>
              <option value="Colombia">Colombia</option>
              <option value="Chile">Chile</option>
              <option value="Argentina">Argentina</option>
            </select>
          </div>
        </div>
      </div>
    </div>

    <!-- Checkbox de términos -->
    <div class="form-control">
      <label class="label cursor-pointer justify-start">
        <input
          type="checkbox"
          name="terminosAceptados"
          class="checkbox text-white bg-white checked:border-red-800 checked:bg-primary checked:text-white"
          required
        />
        <span class="label-text">
          Acepto los <a href="#" class="text-red-800 hover:underline"
            >términos y condiciones</a
          >
          y la <a href="#" class="text-red-800 hover:underline"
            >política de privacidad</a
          >
        </span>
      </label>
    </div>

    <!-- Botón de pago -->
    <button
      type="submit"
      id="submit-btn"
      class="btn btn-error w-full text-white text-lg py-3 h-auto"
    >
      <svg
        class="w-5 h-5 mr-2"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
        ></path>
      </svg>
      <span id="btn-text">Pagar {priceFormatterToPE.format(resume.total)}</span>
    </button>

    <!-- Seguridad -->
    <div class="text-center text-sm text-gray-600">
      <div class="flex items-center justify-center space-x-2">
        <svg
          class="w-4 h-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"
          ></path>
        </svg>
        <span>Pago seguro y encriptado</span>
      </div>
      <p class="mt-2">
        Tus datos están protegidos con encriptación SSL de 256 bits
      </p>
    </div>
  </form>
</div>

<script is:inline define:vars={{ resume, token }}>
  // Función createPayment importada en el servidor de Astro
  const apiUrl = "http://localhost:3000/api"; // Ajusta según tu configuración

  const createPayment = async (payment) => {
    console.log(payment);
    const response = await fetch(`${apiUrl}/payments`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify(payment),
    });

    const result = await response.json();
    return result.success ?? false;
  };

  const form = document.getElementById("payment-form");
  const submitBtn = document.getElementById("submit-btn");
  const btnText = document.getElementById("btn-text");
  const cardNumberInput = document.getElementById("card-number");
  const expiryDateInput = document.getElementById("expiry-date");
  const cardDetails = document.getElementById("card-details");
  const paymentMethodInputs = document.querySelectorAll('input[name="metodo"]');

  // Datos del resumen del carrito desde el servidor

  // Formateo automático del número de tarjeta
  cardNumberInput?.addEventListener("input", function (e) {
    let value = e.target.value.replace(/\s/g, "").replace(/[^0-9]/gi, "");
    let formattedInputValue = value.match(/.{1,4}/g)?.join(" ") || value;
    if (formattedInputValue.length <= 19) {
      e.target.value = formattedInputValue;
    }
  });

  // Formateo automático de la fecha de vencimiento
  expiryDateInput?.addEventListener("input", function (e) {
    let value = e.target.value.replace(/\D/g, "");
    if (value.length >= 2) {
      value = value.substring(0, 2) + "/" + value.substring(2, 4);
    }
    e.target.value = value;
  });

  // Mostrar/ocultar datos de tarjeta según el método de pago
  paymentMethodInputs.forEach((input) => {
    input.addEventListener("change", function () {
      if (this.value === "card") {
        cardDetails.style.display = "block";
        // Hacer campos de tarjeta requeridos
        cardNumberInput.required = true;
        expiryDateInput.required = true;
        document.querySelector('input[name="cvv"]').required = true;
        document.querySelector('input[name="nombreTarjeta"]').required = true;
      } else {
        cardDetails.style.display = "none";
        // Quitar requerimiento de campos de tarjeta
        cardNumberInput.required = false;
        expiryDateInput.required = false;
        document.querySelector('input[name="cvv"]').required = false;
        document.querySelector('input[name="nombreTarjeta"]').required = false;
      }
    });
  });

  // Función para obtener IP (simulada)
  function getClientIP() {
    // En producción, esto debería obtenerse del servidor
    return "127.0.0.1";
  }

  // Función para extraer últimos 4 dígitos
  function getLastFourDigits(cardNumber) {
    return cardNumber.replace(/\s/g, "").slice(-4);
  }

  // Manejar envío del formulario
  form?.addEventListener("submit", async function (e) {
    e.preventDefault();

    // Cambiar estado del botón
    submitBtn.disabled = true;
    btnText.textContent = "Procesando...";

    try {
      const formData = new FormData(form);
      const metodo = formData.get("metodo");

      // Construir objeto de pago
      const paymentData = {
        nombre: formData.get("nombre"),
        apellido: formData.get("apellido"),
        email: formData.get("email"),
        subtotal: resume.subTotal,
        envio: resume.envio,
        total: resume.total,
        metodo: metodo,
        numeroTarjeta: metodo === "card" ? formData.get("numeroTarjeta") : "",
        fechaVencimiento:
          metodo === "card" ? formData.get("fechaVencimiento") : "",
        cvv: metodo === "card" ? formData.get("cvv") : "",
        nombreTarjeta: metodo === "card" ? formData.get("nombreTarjeta") : "",
        ultima4:
          metodo === "card"
            ? getLastFourDigits(formData.get("numeroTarjeta"))
            : "",
        direccion: formData.get("direccion"),
        ciudad: formData.get("ciudad"),
        codigoPostal: formData.get("codigoPostal"),
        pais: formData.get("pais"),
        terminosAceptados: formData.get("terminosAceptados") === "on",
        ip: getClientIP(),
        userAgent: navigator.userAgent,
      };

      // Enviar pago
      const success = await createPayment(paymentData);

      if (success) {
        // Redirigir a página de éxito
        window.location.href = "/miscompras";
      } else {
        throw new Error("Error al procesar el pago");
      }
    } catch (error) {
      console.error("Error:", error);
      alert(
        "Hubo un error al procesar el pago. Por favor, intenta nuevamente."
      );
    } finally {
      // Restaurar estado del botón
      submitBtn.disabled = false;
      btnText.textContent = `Pagar ${resume.total}`;
    }
  });
</script>
