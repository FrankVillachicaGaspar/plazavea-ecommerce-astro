---
import Layout from "../../layouts/Layout.astro";
import { db } from "../../db/db";
import * as schema from "../../db/schema";
import Recomendados from "../../components/Recomendados.astro";

export async function getStaticPaths() {
    const productos = await db
        .select({ id: schema.productos.id })
        .from(schema.productos);

    return productos.map((p) => ({
        params: { id: p.id.toString() },
    }));
}

const { id } = Astro.params;

const producto = await db.query.productos.findFirst({
    where: (t, { eq }) => eq(t.id, Number(id)),
});

const imagenes = await db.query.imagenes.findMany({
    where: (t, { eq }) => eq(t.productoId, Number(id)),
});

const carrito = await db.query.carrito.findFirst({
    where: (t, { eq, and }) =>
        and(eq(t.productoId, Number(id)), eq(t.usuarioId, 1)),
});
---

<Layout>
    <div class="max-w-6xl mx-auto px-4 py-8 mt-20">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Carrusel de imágenes -->
            <div class="w-full">
                <div class="carousel w-full rounded-lg shadow-lg">
                    {
                        imagenes.length > 0 ? (
                            imagenes.map((img, index) => (
                                <div
                                    id={`item${index}`}
                                    class="carousel-item w-full"
                                >
                                    <img
                                        src={img.url}
                                        class="w-full object-cover h-96"
                                    />
                                </div>
                            ))
                        ) : (
                            <div class="carousel-item w-full">
                                <img
                                    src="https://via.placeholder.com/600x400"
                                    class="w-full object-cover h-96"
                                />
                            </div>
                        )
                    }
                </div>

                <!-- Carrusel navegación -->
                {
                    imagenes.length > 1 && (
                        <div class="flex justify-center mt-2 gap-2">
                            {imagenes.map((_, index) => (
                                <a
                                    href={`#item${index}`}
                                    class="btn btn-xs btn-outline"
                                >
                                    {index + 1}
                                </a>
                            ))}
                        </div>
                    )
                }
            </div>

            <!-- Detalles del producto -->
            <div class="space-y-4">
                <h1 class="text-3xl font-bold text-gray-800">
                    {producto?.nombre}
                </h1>
                <p class="text-gray-600 text-sm leading-relaxed">
                    {producto?.descripcion}
                </p>
                <p class="text-2xl font-semibold text-primary mt-4">
                    ${producto?.precio}
                </p>

                <div class="flex items-center gap-2 mt-2">
                    {
                        producto?.stock && producto?.stock > 0 ? (
                            <span class="badge badge-success badge-outline">
                                En stock
                            </span>
                        ) : (
                            <span class="badge badge-error badge-outline">
                                Agotado
                            </span>
                        )
                    }
                    <span class="text-sm text-gray-500">ID: {producto?.id}</span
                    >
                </div>

                <button
                    class="btn btn-primary mt-6 w-full disabled:opacity-50"
                    disabled={producto?.stock === 0 || carrito !== undefined}
                    onclick={`agregarAlCarrito(${producto?.id})`}
                    id="carritoBtn"
                >
                    Agregar al carrito
                </button>
            </div>
        </div>
    </div>
    <Recomendados />
</Layout>

<script is:inline>
    async function agregarAlCarrito(productoId) {
        const res = await fetch("/api/carrito", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ productoId }),
        });

        const nuevaCantidad = await res.json();
        const badge = document.querySelector("#carrito-badge");
        const carritoBtn = document.getElementById("carritoBtn");

        if (badge && carritoBtn) {
            badge.textContent = nuevaCantidad;
            carritoBtn.textContent = "Agregado al carrito";
            carritoBtn.disabled = true;
        }
    }
</script>
