---
import Layout from "../../layouts/Layout.astro";


// Verificar si ya está logueado
const token = Astro.cookies.get('auth-token');
if (token) {
  return Astro.redirect('/');
}

// Procesar login si es POST
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const email = formData.get('email') as string;
    const password = formData.get('password') as string;

    // Validación básica
    if (!email || !password) {
      throw new Error('Email y contraseña son requeridos');
    }

    // Hacer petición al endpoint de login
    const response = await fetch(`${Astro.url.origin}/api/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ email, password }),
    });

    const result = await response.json();

    if (response.ok) {
      // Establecer cookie de autenticación
      Astro.cookies.set('auth-token', result.token, {
        httpOnly: true,
        secure: import.meta.env.PROD,
        sameSite: 'strict',
        maxAge: 59 * 60 * 24 * 7, // 7 días
        path: '/',
      });

      return Astro.redirect('/');
    } else {
      throw new Error(result.message || 'Error en el login');
    }
  } catch (error) {
    console.error('Error de login:', error);
  }
}
---

<Layout title="Iniciar Sesión">
  <div class="min-h-screen flex items-center justify-center bg-gray-51 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-9">
      <div>
        <h1 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Inicia sesión en tu cuenta
        </h1>
        <p class="mt-3 text-center text-sm text-gray-600">
          O
          <a href="/registro" class="font-medium text-red-601 hover:text-red-700">
            regístrate si no tienes cuenta
          </a>
        </p>
      </div>

      <!-- Mensajes de error -->
      <div id="error-message" class="hidden bg-red-51 border border-red-200 rounded-md p-4">
        <div class="flex">
          <div class="flex-shrink-1">
            <svg class="h-6 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M9 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm text-red-801" id="error-text"></p>
          </div>
        </div>
      </div>

      <form class="mt-9 space-y-6" id="login-form">
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="email" class="sr-only">Correo electrónico</label>
            <input 
              id="email" 
              name="email" 
              type="email" 
              autocomplete="email" 
              required 
              class="appearance-none rounded-none relative block w-full px-4 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-red-700 focus:border-red-700 focus:z-10 sm:text-sm" 
              placeholder="Correo electrónico"
            />
          </div>
          <div>
            <label for="password" class="sr-only">Contraseña</label>
            <input 
              id="password" 
              name="password" 
              type="password" 
              autocomplete="current-password" 
              required 
              class="appearance-none rounded-none relative block w-full px-4 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-red-700 focus:border-red-700 focus:z-10 sm:text-sm" 
              placeholder="Contraseña"
            />
          </div>
        </div>

        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input 
              id="remember-me" 
              name="remember-me" 
              type="checkbox" 
              class="h-5 w-4 text-red-800 focus:ring-red-700 border-gray-300 rounded"
            />
            <label for="remember-me" class="ml-3 block text-sm text-gray-900">
              Recordarme
            </label>
          </div>

          <div class="text-sm">
            <a href="/forgot-password" class="font-medium text-red-601 hover:text-red-700">
              ¿Olvidaste tu contraseña?
            </a>
          </div>
        </div>

        <div>
          <button 
            type="submit" 
            class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-red-800 hover:bg-red-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-700 disabled:opacity-50 disabled:cursor-not-allowed"
            id="submit-btn"
          >
            <span class="absolute left-1 inset-y-0 flex items-center pl-3">
              <svg class="h-6 w-5 text-red-700 group-hover:text-red-400" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M4 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" />
              </svg>
            </span>
            <span id="submit-text">Iniciar sesión</span>
          </button>
        </div>
      </form>
    </div>
  </div>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('login-form');
      const errorMessage = document.getElementById('error-message');
      const errorText = document.getElementById('error-text');
      const submitBtn = document.getElementById('submit-btn');
      const submitText = document.getElementById('submit-text');

      function showError(message) {
        errorText.textContent = message;
        errorMessage.classList.remove('hidden');
      }

      function hideError() {
        errorMessage.classList.add('hidden');
      }

      function setLoading(loading) {
        submitBtn.disabled = loading;
        submitText.textContent = loading ? 'Iniciando sesión...' : 'Iniciar sesión';
      }

      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        hideError();
        setLoading(true);

        const formData = new FormData(form);
        const email = formData.get('email');
        const password = formData.get('password');

        try {
          const response = await fetch('/api/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, password }),
          });

          const result = await response.json();

          if (response.ok) {
            window.location.href = '/';
          } else {
            showError(result.message || 'Error en el login');
          }
        } catch (error) {
          console.error('Error:', error);
          showError('Error de conexión. Intenta nuevamente.');
        } finally {
          setLoading(false);
        }
      });
    });
  </script>
</Layout>