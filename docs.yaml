openapi: 3.0.3
info:
  title: API de Registro de Usuarios
  description: API para el registro y gestión de usuarios
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
servers:
  - url: http://localhost:4321
    description: Servidor de desarrollo local

paths:
  /api/login:
    post:
      summary: Iniciar sesión
      description: Autentica un usuario y establece una cookie de sesión
      operationId: iniciarSesion
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginData'
            example:
              email: "juan.perez@example.com"
              password: "MiContraseña123"
      responses:
        '200':
          description: Login exitoso
          headers:
            Set-Cookie:
              description: Cookie de autenticación establecida
              schema:
                type: string
                example: "auth-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; SameSite=Strict; Max-Age=604800; Path=/"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaLogin'
              example:
                success: true
                message: "Login exitoso"
                user:
                  id: 123
                  nombre: "Juan"
                  apellidos: "Pérez García"
                  email: "juan.perez@example.com"
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Email y contraseña son requeridos"
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Credenciales inválidas"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Error interno del servidor"

  /api/carrito:
    post:
      summary: Agregar producto al carrito
      description: Agrega un producto al carrito del usuario o incrementa la cantidad si ya existe
      operationId: agregarProductoCarrito
      tags:
        - Carrito
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgregarCarritoData'
            example:
              productoId: 456
              userId: 123
      responses:
        '200':
          description: Producto agregado exitosamente al carrito
          content:
            application/json:
              schema:
                type: integer
                description: Número total de items únicos en el carrito del usuario
                example: 3
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "productoId y userId son requeridos"
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Token de autenticación requerido"
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Producto no encontrado"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Error interno del servidor"

  /api/carrito/disminuir:
    post:
      summary: Disminuir cantidad de producto en carrito
      description: Disminuye la cantidad de un producto en el carrito en 1 unidad. Si la cantidad llega a 0, elimina el producto del carrito
      operationId: disminuirProductoCarrito
      tags:
        - Carrito
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisminuirCarritoData'
            example:
              productoId: 456
              usuarioId: 1
      responses:
        '200':
          description: Cantidad del producto disminuida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaDisminuirCarrito'
              example:
                mensaje: "Carrito disminuido con éxito"
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "productoId es requerido"
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Token de autenticación requerido"
        '404':
          description: Producto no encontrado en el carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Producto no encontrado en el carrito"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Error interno del servidor"

  /api/carrito/{id}:
    delete:
      summary: Eliminar producto del carrito
      description: Elimina completamente un producto específico del carrito del usuario
      operationId: eliminarProductoCarrito
      tags:
        - Carrito
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a eliminar del carrito
          schema:
            type: integer
            minimum: 1
          example: 456
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EliminarCarritoData'
            example:
              userId: 123
      responses:
        '200':
          description: Producto eliminado exitosamente del carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaEliminarCarrito'
              example:
                mensaje: "Producto eliminado del carrito"
        '400':
          description: ID de producto inválido o datos faltantes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              examples:
                id_invalido:
                  summary: ID inválido
                  value:
                    mesage: "Id inválido"
                user_id_faltante:
                  summary: userId faltante
                  value:
                    success: false
                    message: "userId es requerido"
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Token de autenticación requerido"
        '404':
          description: Producto no encontrado en el carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Producto no encontrado en el carrito"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Error interno del servidor"

  /api/usuario/registrar:
    post:
      summary: Registrar nuevo usuario
      description: Crea una cuenta de usuario nueva con validaciones completas
      operationId: registrarUsuario
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroData'
            examples:
              ejemplo_completo:
                summary: Registro completo
                value:
                  nombre: "Juan"
                  apellidos: "Pérez García"
                  email: "juan.perez@example.com"
                  password: "MiContraseña123"
                  telefono: "987654321"
                  fechaNacimiento: "1990-05-15"
                  genero: "masculino"
                  tipoDocumento: "DNI"
                  numeroDocumento: "12345678"
                  departamento: "Lima"
                  provincia: "Lima"
                  distrito: "Miraflores"
                  direccion: "Av. Pardo 123"
                  referencia: "Frente al parque"
                  codigoPostal: "15074"
                  aceptaMarketing: true
                  aceptaTerminos: true
              ejemplo_minimo:
                summary: Registro mínimo
                value:
                  nombre: "María"
                  apellidos: "González"
                  email: "maria.gonzalez@example.com"
                  password: "MiContraseña456"
                  aceptaTerminos: true
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaExitosa'
              example:
                success: true
                message: "Usuario registrado exitosamente"
                data:
                  id: 123
                  nombre: "Juan"
                  apellidos: "Pérez García"
                  email: "juan.perez@example.com"
                  fechaRegistro: "2024-01-15T10:30:00.000Z"
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              examples:
                campos_obligatorios:
                  summary: Campos obligatorios faltantes
                  value:
                    success: false
                    message: "Los campos nombre, apellidos, email y contraseña son obligatorios"
                email_invalido:
                  summary: Formato de email inválido
                  value:
                    success: false
                    message: "El formato del email no es válido"
                contraseña_invalida:
                  summary: Contraseña inválida
                  value:
                    success: false
                    message: "La contraseña debe tener al menos 8 caracteres"
                telefono_invalido:
                  summary: Teléfono inválido
                  value:
                    success: false
                    message: "El teléfono debe ser un número válido peruano (9 dígitos)"
                dni_invalido:
                  summary: DNI inválido
                  value:
                    success: false
                    message: "El DNI debe tener 8 dígitos"
                terminos_no_aceptados:
                  summary: Términos no aceptados
                  value:
                    success: false
                    message: "Debes aceptar los términos y condiciones"
                content_type_incorrecto:
                  summary: Content-Type incorrecto
                  value:
                    success: false
                    message: "Content-Type debe ser application/json"
        '409':
          description: Email ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Ya existe una cuenta con este email"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Error interno del servidor. Por favor, inténtalo más tarde."

    get:
      summary: Verificar si un email ya existe
      description: Verifica si ya existe un usuario registrado con el email proporcionado
      operationId: verificarEmail
      tags:
        - Usuarios
      parameters:
        - name: email
          in: query
          required: true
          description: Email a verificar
          schema:
            type: string
            format: email
          example: "usuario@example.com"
      responses:
        '200':
          description: Verificación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaVerificacionEmail'
              example:
                success: true
                exists: false
        '400':
          description: Email no proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Email es requerido"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespuestaError'
              example:
                success: false
                message: "Error interno del servidor"

components:
  schemas:
    AgregarCarritoData:
      type: object
      required:
        - productoId
        - userId
      properties:
        productoId:
          type: integer
          description: ID del producto a agregar al carrito
          example: 456
          minimum: 1
        userId:
          type: integer
          description: ID del usuario propietario del carrito
          example: 123
          minimum: 1

    DisminuirCarritoData:
      type: object
      required:
        - productoId
      properties:
        productoId:
          type: integer
          description: ID del producto a disminuir en el carrito
          example: 456
          minimum: 1

    RespuestaDisminuirCarrito:
      type: object
      properties:
        mensaje:
          type: string
          description: Mensaje de confirmación
          example: "Carrito disminuido con éxito"

    EliminarCarritoData:
      type: object
      required:
        - userId
      properties:
        userId:
          type: integer
          description: ID del usuario propietario del carrito
          example: 123
          minimum: 1

    RespuestaEliminarCarrito:
      type: object
      properties:
        mensaje:
          type: string
          description: Mensaje de confirmación
          example: "Producto eliminado del carrito"

    LoginData:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Email del usuario
          example: "juan.perez@example.com"
          maxLength: 255
        password:
          type: string
          description: Contraseña del usuario
          example: "MiContraseña123"
          minLength: 1
          maxLength: 255

    RespuestaLogin:
      type: object
      properties:
        success:
          type: boolean
          description: Indica si la operación fue exitosa
          example: true
        message:
          type: string
          description: Mensaje descriptivo del resultado
          example: "Login exitoso"
        user:
          type: object
          description: Datos del usuario autenticado
          properties:
            id:
              type: integer
              description: ID único del usuario
              example: 123
            nombre:
              type: string
              description: Nombre del usuario
              example: "Juan"
            apellidos:
              type: string
              description: Apellidos del usuario
              example: "Pérez García"
            email:
              type: string
              format: email
              description: Email del usuario
              example: "juan.perez@example.com"
            telefono:
              type: string
              description: Teléfono del usuario
              example: "987654321"
              nullable: true
            fechaNacimiento:
              type: string
              format: date
              description: Fecha de nacimiento del usuario
              example: "1990-05-15"
              nullable: true
            genero:
              type: string
              description: Género del usuario
              example: "masculino"
              nullable: true
            tipoDocumento:
              type: string
              description: Tipo de documento de identidad
              example: "DNI"
              nullable: true
            numeroDocumento:
              type: string
              description: Número de documento
              example: "12345678"
              nullable: true
            departamento:
              type: string
              description: Departamento de residencia
              example: "Lima"
              nullable: true
            provincia:
              type: string
              description: Provincia de residencia
              example: "Lima"
              nullable: true
            distrito:
              type: string
              description: Distrito de residencia
              example: "Miraflores"
              nullable: true
            direccion:
              type: string
              description: Dirección completa
              example: "Av. Pardo 123"
              nullable: true
            referencia:
              type: string
              description: Referencia de la dirección
              example: "Frente al parque"
              nullable: true
            codigoPostal:
              type: string
              description: Código postal
              example: "15074"
              nullable: true
            aceptaMarketing:
              type: boolean
              description: Acepta recibir comunicaciones de marketing
              example: true
            fechaRegistro:
              type: string
              format: date-time
              description: Fecha y hora de registro
              example: "2024-01-15T10:30:00.000Z"
            ultimoAcceso:
              type: string
              format: date-time
              description: Fecha y hora del último acceso
              example: "2024-01-15T10:30:00.000Z"
            activo:
              type: boolean
              description: Indica si el usuario está activo
              example: true

    RegistroData:
      type: object
      required:
        - nombre
        - apellidos
        - email
        - password
        - aceptaTerminos
      properties:
        nombre:
          type: string
          description: Nombre del usuario
          example: "Juan"
          minLength: 1
          maxLength: 100
        apellidos:
          type: string
          description: Apellidos del usuario
          example: "Pérez García"
          minLength: 1
          maxLength: 100
        email:
          type: string
          format: email
          description: Email del usuario (debe ser único)
          example: "juan.perez@example.com"
          maxLength: 255
        password:
          type: string
          description: Contraseña del usuario (mínimo 8 caracteres)
          example: "MiContraseña123"
          minLength: 8
          maxLength: 255
        telefono:
          type: string
          description: Teléfono peruano (9 dígitos)
          example: "987654321"
          pattern: "^9[0-9]{8}$"
          nullable: true
        fechaNacimiento:
          type: string
          format: date
          description: Fecha de nacimiento del usuario
          example: "1990-05-15"
          nullable: true
        genero:
          type: string
          description: Género del usuario
          example: "masculino"
          enum: ["masculino", "femenino", "otro"]
          nullable: true
        tipoDocumento:
          type: string
          description: Tipo de documento de identidad
          example: "DNI"
          enum: ["DNI", "CE", "Pasaporte"]
          default: "DNI"
          nullable: true
        numeroDocumento:
          type: string
          description: Número de documento (8 dígitos para DNI)
          example: "12345678"
          pattern: "^[0-9]{8}$"
          nullable: true
        departamento:
          type: string
          description: Departamento de residencia
          example: "Lima"
          maxLength: 100
          nullable: true
        provincia:
          type: string
          description: Provincia de residencia
          example: "Lima"
          maxLength: 100
          nullable: true
        distrito:
          type: string
          description: Distrito de residencia
          example: "Miraflores"
          maxLength: 100
          nullable: true
        direccion:
          type: string
          description: Dirección completa
          example: "Av. Pardo 123"
          maxLength: 255
          nullable: true
        referencia:
          type: string
          description: Referencia de la dirección
          example: "Frente al parque"
          maxLength: 255
          nullable: true
        codigoPostal:
          type: string
          description: Código postal
          example: "15074"
          maxLength: 10
          nullable: true
        aceptaMarketing:
          type: boolean
          description: Acepta recibir comunicaciones de marketing
          example: true
          default: false
        aceptaTerminos:
          type: boolean
          description: Acepta los términos y condiciones (obligatorio)
          example: true

    RespuestaExitosa:
      type: object
      properties:
        success:
          type: boolean
          description: Indica si la operación fue exitosa
          example: true
        message:
          type: string
          description: Mensaje descriptivo del resultado
          example: "Usuario registrado exitosamente"
        data:
          type: object
          description: Datos del usuario registrado
          properties:
            id:
              type: integer
              description: ID único del usuario
              example: 123
            nombre:
              type: string
              description: Nombre del usuario
              example: "Juan"
            apellidos:
              type: string
              description: Apellidos del usuario
              example: "Pérez García"
            email:
              type: string
              format: email
              description: Email del usuario
              example: "juan.perez@example.com"
            fechaRegistro:
              type: string
              format: date-time
              description: Fecha y hora de registro
              example: "2024-01-15T10:30:00.000Z"

    RespuestaError:
      type: object
      properties:
        success:
          type: boolean
          description: Indica si la operación fue exitosa
          example: false
        message:
          type: string
          description: Mensaje de error descriptivo
          example: "Error en la validación de datos"

    RespuestaVerificacionEmail:
      type: object
      properties:
        success:
          type: boolean
          description: Indica si la operación fue exitosa
          example: true
        exists:
          type: boolean
          description: Indica si el email ya existe
          example: false

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT para autenticación

tags:
  - name: Autenticación
    description: Operaciones de autenticación y autorización
  - name: Carrito
    description: Operaciones del carrito de compras
  - name: Usuarios
    description: Operaciones relacionadas con usuarios